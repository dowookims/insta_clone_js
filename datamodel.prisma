type User {
  id: ID! @id
  name: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String @default(value: "")
  bio: String!
  posts: [Post!]! @relation(name: "PostsOfUser" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser" onDelete: CASCADE)
  rooms: [Room!]! @relation(name: "RoomsOfUser" onDelete: CASCADE)
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  loginSecret: String
}

type Post {
  id: ID! @id
  files: [File!]! @relation(name: "FilesOfPost" onDelete: CASCADE)
  user: User! @relation(name: "PostsOfUser")
  location: String
  caption: String!
  likes: [Like!]! @relation(name: "LikesOfPost" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost" onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User!
  post: Post! @relation(name: "LikesOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User! @relation(name: "CommentsOfUser")
  post: Post! @relation(name: "CommentsOfPost")
}

type File {
  id: ID! @id
  url: String!
  post: Post! @relation(name: "FilesOfPost" )
}

type Room {
  id: ID! @id
  participants: [User!]! @relation(name: "RoomsOfUser")
  messages: [Message!]!
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
}